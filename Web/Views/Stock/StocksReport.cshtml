@using Web.Helpers
@model System.Collections.Generic.IList<Web.ViewModels.StockReportViewModel>

@{
    ViewData["Title"] = "Akcijų ataskaita";
    ViewData["Menu"] = "StockReport";
    ViewData["BreadCrumbs"] = new BreadCrumb()
        .Append(SiteCrumbs.Home(Url))
        .Append(SiteCrumbs.StockReport(Url));
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
function drawGraph(charDataArray, charMetaData){
        var charMetaJsonObject = JSON.parse(charMetaData);
        var charDataJsonObject = eval(charDataArray);
        var charData = [["Data", charMetaJsonObject['name']]];
        for(i = 0;i < charDataJsonObject.length;i++){
            charData.push([charDataJsonObject[i]['item1'].substring(0,10), charDataJsonObject[i]['item2']]);            
        }
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable(charData);
        
            var options = {
                title: "",
                legend: { position: 'bottom' }
            };
        
            var chart = new google.visualization.LineChart(document.getElementById(charMetaJsonObject["company"]));
        
            chart.draw(data, options);
        
    }
}
</script>
<h1>Akcijų ataskaita</h1>

    
@foreach (var stockData in Model)
{
    stockData.stockData.Company = stockData.stockData.Company.Replace("\"", "");
    var charMetaJsonObject = Json.Serialize(stockData.stockData);
    var charDataJsonObject = Json.Serialize(stockData.GetCharData());
    
    <div class="form-group">
        <p style="font-size: 20px">@stockData.stockData.Company @stockData.stockData.Name</p>
    </div>
    
    <div id="@stockData.stockData.Company" style="width: 900px; height: 500px"></div>
    <hr>
    <script>drawGraph('@charDataJsonObject', '@charMetaJsonObject')</script>
}


