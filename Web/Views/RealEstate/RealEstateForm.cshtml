@model Web.ViewModels.RealEstateViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isAdd = Model.Id == 0;
    var title = isAdd ? "Pridėti nekilnojamą turtą" : "Redaguoti nekilnojamą turtą";

    ViewData["Title"] = title;
}

<h1>@(title)</h1>

@using (Html.BeginForm(isAdd ? "Create" : "Edit", "RealEstate", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)
    <div class="form-group">
        <label for="Name">Pavadinimas*</label>
        @Html.TextBoxFor(x => x.Name, new { @placeholder = "Pavadinimas", @class = "form-control" })
    </div>
    
    <div class="form-group">
        <label for="Address">Adresas*</label>
        @Html.TextBoxFor(x => x.Address, new { @placeholder = "Adresas", @class = "form-control" })
    </div>
    
    <div class="form-group">
        <label for="SquareSpace">Plotas*</label>
        @Html.TextBoxFor(x => x.SquareSpace, new {@type = "number",  @placeholder = "Plotas", @class = "form-control" })
    </div>
    
    <div class="form-group">
        <label for="RoomNumber">Kambarių sk.*</label>
        @Html.TextBoxFor(x => x.RoomNumber, new {@type = "number",  @placeholder = "Kambarių sk.", @class = "form-control" })
    </div>
    
    <div class="form-group">
        <label for="Valuation">Vertė*</label>
        @Html.TextBoxFor(x => x.Valuation, new {@type = "number",  @placeholder = "Vertė", @class = "form-control" })
    </div>
    
    <div class="form-check mb-3">
        @Html.CheckBoxFor(x => x.IsRented, new { @placeholder = "Išnuomotas", @class = "form-check-input" })
        <label class="form-check-label" for="IsRented">Išnuomotas</label>
    </div>
    
    <button type="submit" class="btn btn-primary">@(isAdd ? "Pridėti" : "Redaguoti")</button>
    <a class="btn btn-outline-secondary" asp-controller="RealEstate" asp-action="OpenRealEstateList">Grįžti į sąrašą</a>
}